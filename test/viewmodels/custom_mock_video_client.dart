import 'package:audio_learn/constants.dart';

import 'mock_youtube.mocks.dart';
import 'package:youtube_explode_dart/youtube_explode_dart.dart' as yt;

/// This class extends the MockVideoClient class generated by
/// the build_runner package based on mock_youtube.dart definitions.
class CustomMockVideoClient extends MockVideoClient {
  @override
  Future<yt.Video> get(dynamic id) async {
    List<String> keywords = ['keyword 1', 'keyword 2', 'keyword 3'];

    // if the video url is invalid, instanciating the yt.VideoId
    // in unit test will not throw an ArgumentError, but will return
    // a yt.VideoId instance with a value of 'invalid_url'.
    //
    // So, in order to test the error handling if the video url is
    // invalid, we need to set a channel id that is invalid.
    String channelId = (id.value == 'invalid_url')
        ? 'CustomMockVideoClient_ChannelId'
        : 'UCd11FV1u3nj3RvOgH_s_ckQ';

    return yt.Video(
      yt.VideoId(id.toString()), // Assuming 'id' is a valid video ID
      'CustomMockVideoClient Video Title',
      'CustomMockVideoClient Author',
      yt.ChannelId(channelId),
      DateTime.now(),
      frenchDateTimeFormat.format(DateTime.now()),
      DateTime.now(),
      'CustomMockVideoClient video description',
      const Duration(minutes: 50),
      yt.ThumbnailSet(id.toString()), // Thumbnails
      keywords,
      const yt.Engagement(1, 10, 2),
      false,
      // Add other required fields as necessary
    );
  }
}
